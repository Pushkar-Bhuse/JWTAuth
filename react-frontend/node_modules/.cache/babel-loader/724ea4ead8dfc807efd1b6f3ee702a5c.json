{"ast":null,"code":"import _defineProperty from \"D:\\\\JWT\\\\react-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\JWT\\\\react-frontend\\\\src\\\\components\\\\LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_change = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = _objectSpread({}, prevstate);\n\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.handle_form_login = (e, state) => {\n      this.setState({\n        username: \"\",\n        password: \"\"\n      });\n      this.props.handle_login(e, state);\n      e.preventDefault();\n    };\n\n    if (props.clear_input === true) {\n      this.setState({\n        username: \"\",\n        password: \"\"\n      });\n    }\n\n    this.state = {\n      username: '',\n      password: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      onSubmit: e => this.props.handle_login(e, this.state),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handle_change,\n      className: \"form-control\",\n      placeholder: \"Enter Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handle_change,\n      className: \"form-control\",\n      id: \"exampleInputPassword1\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}\n\nexport default LoginForm;\nLoginForm.propTypes = {\n  handle_login: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:\\JWT\\react-frontend\\src\\components\\LoginForm.js"],"names":["React","PropTypes","LoginForm","Component","constructor","props","handle_change","e","name","target","value","setState","prevstate","newState","handle_form_login","state","username","password","handle_login","preventDefault","clear_input","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass LoginForm extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        if(props.clear_input === true){\r\n            this.setState({\r\n                username:\"\",\r\n                password:\"\"\r\n            })\r\n        }\r\n\r\n        this.state = {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n\r\n  handle_change = e => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    this.setState(prevstate => {\r\n      const newState = { ...prevstate };\r\n      newState[name] = value;\r\n      return newState;\r\n    });\r\n  };\r\n\r\n  handle_form_login = (e, state) =>{\r\n      this.setState({\r\n          username:\"\",\r\n          password:\"\"\r\n      })\r\n      this.props.handle_login(e,state)\r\n      e.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <form onSubmit={e => this.props.handle_login(e, this.state)}>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"username\">Username</label>\r\n        <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handle_change} className=\"form-control\" placeholder=\"Enter Username\"/>\r\n      </div>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"password\">Password</label>\r\n        <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handle_change} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\"/>\r\n      </div>\r\n      <button type=\"submit\" className=\"btn btn-primary\">Login</button>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n\r\nLoginForm.propTypes = {\r\n  handle_login: PropTypes.func.isRequired\r\n};"]},"metadata":{},"sourceType":"module"}